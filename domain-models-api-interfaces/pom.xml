<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>sling</groupId>
		<artifactId>raml-module-builder</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<!-- <relativePath>../domain-models-poc</relativePath> -->
	</parent>
	<artifactId>domain-models-api-interfaces</artifactId>
	<properties>
		<jaxrsVersion>2.0</jaxrsVersion>


	</properties>

	<!-- <dependencyManagement> <dependencies> <dependency> <groupId>org.hibernate.ogm</groupId> 
		<artifactId>hibernate-ogm-bom</artifactId> <type>pom</type> <version>4.2.0.Final</version> 
		<scope>import</scope> </dependency> </dependencies> </dependencyManagement> -->
	<dependencies>
		<!-- <dependency> <groupId>org.hibernate.ogm</groupId> <artifactId>hibernate-ogm-mongodb</artifactId> 
			</dependency> <dependency> <groupId>org.jboss.jbossts</groupId> <artifactId>jbossjta</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
  <dependency>
    <groupId>javax.ws.rs</groupId>
    <artifactId>javax.ws.rs-api</artifactId>
  </dependency>
  <dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-unit</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<optional>true</optional>
		</dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mailapi</artifactId>
      <version>1.4.3</version>
    </dependency>
		<dependency>
			<groupId>sling</groupId>
			<artifactId>domain-models-api-aspects</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>

		<resources>
			<resource>
				<!-- for src/main/resources/API_PATH_MAPPINGS -->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<debuglevel>source</debuglevel>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.raml.plugins</groupId>
				<artifactId>raml-jaxrs-maven-plugin</artifactId>
				<version>1.3.4</version>
				<dependencies>
					<dependency>
						<groupId>sling</groupId>
						<artifactId>domain-models-interface-extensions</artifactId>
						<version>0.0.1-SNAPSHOT</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- Use sourcePaths if you want to provide a single RAML file or a 
						list of RAML files -->
					<!-- <sourcePath>${basedir}/raml/config.raml</sourcePath> -->
					<sourceDirectory>${ramlfiles_path}</sourceDirectory>
					<!-- Optionally configure outputDirectory if you don't like the default -->
					<outputDirectory>${generated_files_path}</outputDirectory>
					<!-- Replace with your package name -->
					<basePackageName>com.sling.rest.jaxrs</basePackageName>
					<!-- Valid values: 1.1 2.0 -->
					<JAX-RSVersion>2.0</JAX-RSVersion>
					<useJsr303Annotations>true</useJsr303Annotations>
					<!-- Valid values: jackson1 jackson2 gson none -->
					<jsonMapper>jackson2</jsonMapper>
					<!-- Optionally set extensions to a list of fully qualified names of 
						classes that implement org.raml.jaxrs.codegen.core.ext.GeneratorExtension -->
					<!-- for example: <extensions> <param>com.abc.AuthorizationAnnotationExtension</param> 
						<param>com.abc.ParameterFilterExtension</param> </extensions> Custom annotator 
						for json schema to pojo convertor <customAnnotator>com.abc.MyCustomAnnotator</customAnnotator> -->
					<extensions>
						<param>com.sling.rest.tools.Raml2Java</param>
					</extensions>
					<skip>false</skip>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				<executions>
					<execution>
						<id>generate_resource_annotations</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>

						<configuration>
							<mainClass>com.sling.rest.tools.AnnotationGrabber</mainClass>
							<!-- <executable>java</executable> -->
							<arguments>
								<!--<argument>-classpath</argument> <classpath /> -->

							</arguments>
							<systemProperties>
								<systemProperty>
									<key>file_path</key>
									<value>${basedir}/target/classes</value>
								</systemProperty>
							</systemProperties>
						</configuration>
					</execution>
					<!-- <execution> <id>enrich_pojos</id> <phase>package</phase> <goals> 
						<goal>exec</goal> </goals> <configuration> <executable>java</executable> 
						<arguments> <argument>-classpath</argument> <classpath /> <argument>com.sling.rest.tools.PojoEnrichment</argument> 
						</arguments> </configuration> </execution> -->
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>io.vertx.core.Launcher</Main-Class>
										<Main-Verticle>com.sling.rest.RestVerticle</Main-Verticle>
									</manifestEntries>
								</transformer>
							</transformers>
							<artifactSet />
							<outputFile>${project.build.directory}/${project.artifactId}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
